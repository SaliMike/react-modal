{"version":3,"sources":["../../../src/components/Modal.styled.ts"],"names":["fadeIn","from","opacity","to","fadeOut","scale3d","a","b","c","zoomIn","transform","zoomOut","fadeInAnimation","keyframes","fadeOutAnimation","zoomInAnimation","zoomOutAnimation","Wrapper","styled","div","props","zIndex","css","Overlay","padding","background","openingDuration","closingDuration","Panel","width","height","borderRadius","border","boxShadow","restrictedWidth","restrictedHeight","Close","CloseIcon","img"],"mappings":"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","sourcesContent":["import styled, { css, keyframes } from \"styled-components\";\n\ntype CSSValue = string | number;\n\ntype Keyframe = {\n  [property: string]: CSSValue;\n};\n\ntype Animation = {\n  [keyframe: string]: Keyframe;\n};\n\nconst fadeIn: Animation = {\n  from: {\n    opacity: 0,\n  },\n  to: {\n    opacity: 1,\n  },\n};\n\nconst fadeOut: Animation = {\n  from: {\n    opacity: 1,\n  },\n  to: {\n    opacity: 0,\n  },\n};\n\nconst scale3d = (a: number, b: number, c: number): string =>\n  `scale3d(${a}, ${b}, ${c})`;\n\nconst zoomIn: Animation = {\n  from: {\n    opacity: 0,\n    transform: scale3d(0.3, 0.3, 0.3),\n  },\n  \"50%\": {\n    opacity: 1,\n  },\n};\n\nconst zoomOut: Animation = {\n  from: {\n    opacity: 1,\n  },\n  \"50%\": {\n    opacity: 0,\n    transform: scale3d(0.3, 0.3, 0.3),\n  },\n  to: {\n    opacity: 0,\n  },\n};\n\nconst fadeInAnimation = keyframes`${fadeIn}`;\nconst fadeOutAnimation = keyframes`${fadeOut}`;\nconst zoomInAnimation = keyframes`${zoomIn}`;\nconst zoomOutAnimation = keyframes`${zoomOut}`;\n\ntype WrapperPropsType = {\n  isOverlay: boolean;\n  zIndex: number;\n};\nexport const Wrapper = styled.div<WrapperPropsType>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  max-width: 100%;\n  max-height: 100%;\n  z-index: ${(props) => props.zIndex};\n  box-sizing: border-box;\n\n  ${(props) =>\n    !props.isOverlay &&\n    css`\n      // top: 50%;\n      // left: 50%;\n      // transform: translate(-50%, -50%);\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      margin: auto;\n      overflow: auto;\n    `}\n\n  ${(props) =>\n    props.isOverlay &&\n    css`\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n    `}\n`;\n\ntype OverlayPropsType = {\n  isVisible: boolean;\n  isOpening: boolean;\n  isClosing: boolean;\n  openingDuration: number;\n  closingDuration: number;\n  padding: string;\n  background: string;\n};\nexport const Overlay = styled.div<OverlayPropsType>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  padding: ${(props) => props.padding};\n  overflow: auto;\n  background: ${(props) => props.background};\n  box-sizing: border-box;\n  // opacity: 0;\n\n\n  ${(props) => props.isVisible && css``}\n    ${(props) =>\n      props.isOpening &&\n      css`\n        animation: ${(props: OverlayPropsType) => props.openingDuration}ms\n          ${fadeInAnimation};\n        animation-fill-mode: both;\n      `}\n      ${(props) =>\n        props.isClosing &&\n        css`\n          animation: ${(props: OverlayPropsType) => props.closingDuration}ms\n            ${fadeOutAnimation};\n          animation-fill-mode: both;\n        `};\n`;\n\ntype PanelPropsType = {\n  isVisible: boolean;\n  isOpening: boolean;\n  isClosing: boolean;\n  openingDuration: number;\n  closingDuration: number;\n  isRestrictedSize: boolean;\n  restrictedWidth: string;\n  restrictedHeight: string;\n  width: string;\n  height: string;\n  borderRadius: string;\n  border: string;\n  padding: string;\n  background: string;\n  boxShadow: string;\n};\nexport const Panel = styled.div<PanelPropsType>`\n  position: relative;\n  display: block;\n  margin: auto;\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  padding: ${(props) => props.padding};\n  border-radius: ${(props) => props.borderRadius};\n  border: ${(props) => props.border};\n  background: ${(props) => props.background};\n  box-shadow: ${(props) => props.boxShadow};\n  box-sizing: border-box;\n  // opacity: 0;\n\n  ${(props) => props.isVisible && css``}\n\n  ${(props) =>\n    props.isOpening &&\n    css`\n      animation: ${(props: PanelPropsType) => props.openingDuration}ms\n        ${zoomInAnimation};\n      animation-fill-mode: both;\n    `}\n      ${(props) =>\n        props.isClosing &&\n        css`\n          animation: ${(props: PanelPropsType) => props.closingDuration}ms\n            ${zoomOutAnimation};\n          animation-fill-mode: both;\n        `};\n\n  ${(props) =>\n    props.isRestrictedSize &&\n    css`\n      max-width: ${(props: PanelPropsType) => props.restrictedWidth};\n      max-height: ${(props: PanelPropsType) => props.restrictedHeight};\n      overflow: auto;\n    `}\n`;\n\nexport const Close = styled.div`\n  position: absolute;\n  top: 0;\n  left: initial;\n  right: 0;\n  bottom: initial;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 44px;\n  height: 44px;\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n`;\n"],"file":"Modal.styled.js"}