{"version":3,"sources":["../../../src/components/Modal.tsx"],"names":["modalPropTypes","children","PropTypes","options","openingDuration","closingDuration","zIndex","isOverlay","isOverlayClosing","overlayPadding","overlayBackground","isPanelCloseButton","isPanelRestrictedSize","panelRestrictedWidth","panelRestrictedHeight","panelWidth","panelHeight","panelBorderRadius","panelBorder","panelBackground","panelBoxShadow","panelPadding","string","onOpenStart","onOpenEnd","onCloseStart","onCloseEnd","func","modalDefaultProps","modalInitialValues","Modal","forwardRef","panelRef","useRef","useReducer","Object","handleActionOnOpenStart","handleActionOnOpenEnd","handleActionOnCloseStart","handleActionOnCloseEnd","openModal","modalState","type","closeModal","handleClickDocumentEventListener","event","useEffect","timeout","setTimeout","modalDispatch","clearTimeout","document","useImperativeHandle","renderPanel","CLOSE_ICON"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,QAAMA,cAAc,GAAG;AACrBC,IAAAA,QAAQ,EAAEC,oBADW,IAAA;AAErBC,IAAAA,OAAO,EAAE,oBAAA,KAAA,CAAgB;AACvBC,MAAAA,eAAe,EAAEF,oBADM,MAAA;AAEvBG,MAAAA,eAAe,EAAEH,oBAFM,MAAA;AAGvBI,MAAAA,MAAM,EAAEJ,oBAHe,MAAA;AAIvBK,MAAAA,SAAS,EAAEL,oBAJY,IAAA;AAKvBM,MAAAA,gBAAgB,EAAEN,oBALK,IAAA;AAMvBO,MAAAA,cAAc,EAAEP,oBANO,MAAA;AAOvBQ,MAAAA,iBAAiB,EAAER,oBAPI,MAAA;AAQvBS,MAAAA,kBAAkB,EAAET,oBARG,IAAA;AASvBU,MAAAA,qBAAqB,EAAEV,oBATA,IAAA;AAUvBW,MAAAA,oBAAoB,EAAEX,oBAVC,MAAA;AAWvBY,MAAAA,qBAAqB,EAAEZ,oBAXA,MAAA;AAYvBa,MAAAA,UAAU,EAAEb,oBAZW,MAAA;AAavBc,MAAAA,WAAW,EAAEd,oBAbU,MAAA;AAcvBe,MAAAA,iBAAiB,EAAEf,oBAdI,MAAA;AAevBgB,MAAAA,WAAW,EAAEhB,oBAfU,MAAA;AAgBvBiB,MAAAA,eAAe,EAAEjB,oBAhBM,MAAA;AAiBvBkB,MAAAA,cAAc,EAAElB,oBAjBO,MAAA;AAkBvBmB,MAAAA,YAAY,EAAEnB,oBAAUoB;AAlBD,KAAhB,CAFY;AAsBrBC,IAAAA,WAAW,EAAErB,oBAtBQ,IAAA;AAuBrBsB,IAAAA,SAAS,EAAEtB,oBAvBU,IAAA;AAwBrBuB,IAAAA,YAAY,EAAEvB,oBAxBO,IAAA;AAyBrBwB,IAAAA,UAAU,EAAExB,oBAAUyB;AAzBD,GAAvB;AA4BA,QAAMC,iBAAiB,GAAG;AACxBzB,IAAAA,OAAO,EAAE;AACPC,MAAAA,eAAe,EAAEyB,qBADV,eAAA;AAEPxB,MAAAA,eAAe,EAAEwB,qBAFV,eAAA;AAGPvB,MAAAA,MAAM,EAAEuB,qBAHD,MAAA;AAIPtB,MAAAA,SAAS,EAAEsB,qBAJJ,SAAA;AAKPrB,MAAAA,gBAAgB,EAAEqB,qBALX,gBAAA;AAMPpB,MAAAA,cAAc,EAAEoB,qBANT,cAAA;AAOPnB,MAAAA,iBAAiB,EAAEmB,qBAPZ,iBAAA;AAQPlB,MAAAA,kBAAkB,EAAEkB,qBARb,kBAAA;AASPjB,MAAAA,qBAAqB,EAAEiB,qBAThB,qBAAA;AAUPhB,MAAAA,oBAAoB,EAAEgB,qBAVf,oBAAA;AAWPf,MAAAA,qBAAqB,EAAEe,qBAXhB,qBAAA;AAYPd,MAAAA,UAAU,EAAEc,qBAZL,UAAA;AAaPb,MAAAA,WAAW,EAAEa,qBAbN,WAAA;AAcPZ,MAAAA,iBAAiB,EAAEY,qBAdZ,iBAAA;AAePX,MAAAA,WAAW,EAAEW,qBAfN,WAAA;AAgBPV,MAAAA,eAAe,EAAEU,qBAhBV,eAAA;AAiBPT,MAAAA,cAAc,EAAES,qBAjBT,cAAA;AAkBPR,MAAAA,YAAY,EAAEQ,qBAAmBR;AAlB1B,KADe;AAqBxBE,IAAAA,WAAW,EAAE,MAAM,CArBK,CAAA;AAsBxBC,IAAAA,SAAS,EAAE,MAAM,CAtBO,CAAA;AAuBxBC,IAAAA,YAAY,EAAE,MAAM,CAvBI,CAAA;AAwBxBC,IAAAA,UAAU,EAAE,MAAM,CAAE;AAxBI,GAA1B;AAqCO,QAAMI,KAAK,WAALA,KAAK,GAAGC,uBACnB,CACE;AAAA,IAAA,QAAA;AAAA,IAAA,OAAA;AAAA,IAAA,WAAA;AAAA,IAAA,SAAA;AAAA,IAAA,YAAA;AAA2DL,IAAAA;AAA3D,GADF,EAAA,YAAA,KAGK;AACH,UAAMM,QAAQ,GAAGC,mBAAjB,IAAiBA,CAAjB;AACA,UAAM,CAAA,UAAA,EAAA,aAAA,IAA8BC,uBAAU,cAAVA,EAElCC,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAAA,oBAAAA,EAFF,OAEEA,CAFkCD,CAApC;;AAKA,UAAME,uBAAuB,GAAG,MAC9B,OAAA,WAAA,KAAA,UAAA,IAAqCb,WADvC,EAAA;;AAEA,UAAMc,qBAAqB,GAAG,MAC5B,OAAA,SAAA,KAAA,UAAA,IAAmCb,SADrC,EAAA;;AAEA,UAAMc,wBAAwB,GAAG,MAC/B,OAAA,YAAA,KAAA,UAAA,IAAsCb,YADxC,EAAA;;AAEA,UAAMc,sBAAsB,GAAG,MAC7B,OAAA,UAAA,KAAA,UAAA,IAAoCb,UADtC,EAAA;;AAGA,UAAMc,SAAS,GAAG,MAAM;AACtB,UAAIC,UAAU,CAAd,QAAA,EAAyB,aAAa,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAb;AAD3B,KAAA;;AAIA,UAAMC,UAAU,GAAG,MAAM;AACvB,UAAIF,UAAU,CAAd,QAAA,EAAyB,aAAa,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAb;AAD3B,KAAA;;AAIA,UAAME,gCAAgC,GAAIC,KAAD,IAAuB;AAC9D,UACE,EACEb,QAAQ,IACRA,QAAQ,CADRA,OAAAA,IAEAA,QAAQ,CAARA,OAAAA,CAAAA,QAAAA,CAA0Ba,KAAK,CAJnC,MAIIb,CAHF,CADF,EAME;AACAW,QAAAA,UAAU;AACX;AATH,KAAA;;AAYAG,0BAAU,MAAM;AACd,UAAA,OAAA;;AACA,UAAIL,UAAU,CAAd,SAAA,EAA0B;AACxBL,QAAAA,uBAAuB;AACvBW,QAAAA,OAAO,GAAGC,UAAU,CAAC,MAAM;AACzBC,UAAAA,aAAa,CAAC;AAAEP,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAbO;AADkB,SAAA,EAEjBR,UAAU,CAFbM,eAAoB,CAApBA;AAGD;;AACD,aAAO,MAAM;AACX,YAAA,OAAA,EAAaG,YAAY,CAAZA,OAAY,CAAZA;AATD,OAQd,CARc,CAWd;AAXO,KAATJ,EAYG,CAACL,UAAU,CAZdK,SAYG,CAZHA;AAcAA,0BAAU,MAAM;AACd,UAAIL,UAAU,CAAd,QAAA,EAAyBJ,qBADX,GAAA,CAEd;AAFO,KAATS,EAGG,CAACL,UAAU,CAHdK,QAGG,CAHHA;AAKAA,0BAAU,MAAM;AACd,UAAA,OAAA;;AACA,UAAIL,UAAU,CAAd,SAAA,EAA0B;AACxBH,QAAAA,wBAAwB;AACxBS,QAAAA,OAAO,GAAGC,UAAU,CAAC,MAAM;AACzBC,UAAAA,aAAa,CAAC;AAAEP,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAbO;AADkB,SAAA,EAEjBR,UAAU,CAFbM,eAAoB,CAApBA;AAGD;;AAED,aAAO,MAAM;AACX,YAAA,OAAA,EAAaG,YAAY,CAAZA,OAAY,CAAZA;AAVD,OASd,CATc,CAYd;AAZO,KAATJ,EAaG,CAACL,UAAU,CAbdK,SAaG,CAbHA;AAeAA,0BAAU,MAAM;AACd,UAAIL,UAAU,CAAd,QAAA,EAAyBF,sBADX,GAAA,CAEd;AAFO,KAATO,EAGG,CAACL,UAAU,CAHdK,QAGG,CAHHA;AAKAA,0BAAU,MAAM;AACd,UAAIL,UAAU,CAAVA,SAAAA,IAAwBA,UAAU,CAAtC,gBAAA,EACEU,QAAQ,CAARA,gBAAAA,CAAAA,OAAAA,EAAAA,gCAAAA;AACF,aAAO,MAAM;AACX,YAAIV,UAAU,CAAVA,SAAAA,IAAwBA,UAAU,CAAtC,gBAAA,EACEU,QAAQ,CAARA,mBAAAA,CAAAA,OAAAA,EAAAA,gCAAAA;AALU,OAGd,CAHc,CAUd;AAVO,KAATL,EAWG,CAACL,UAAU,CAAX,SAAA,EAAuBA,UAAU,CAXpCK,QAWG,CAXHA;AAaAM,oCAAmB,YAAnBA,EAAkC,OAAO;AACvCZ,MAAAA,SAAS,EAAE,MAAMA,SADsB,EAAA;AAEvCG,MAAAA,UAAU,EAAE,MAAMA,UAAU;AAFW,KAAP,CAAlCS;;AAKA,UAAMC,WAAW,GAAG,MAAM;AACxB,aAAA,aACE,gBAAA,aAAA,CAAA,aAAA,EAAA;AACE,QAAA,GAAG,EADL,QAAA;AAEE,QAAA,SAAS,EACPZ,UAAU,CAAVA,SAAAA,IAAwBA,UAAU,CAAlCA,QAAAA,IAA+CA,UAAU,CAAzDA,SAAAA,GAAAA,IAAAA,GAHJ,KAAA;AAOE,QAAA,SAAS,EAAEA,UAAU,CAAVA,SAAAA,GAAAA,IAAAA,GAPb,KAAA;AAQE,QAAA,SAAS,EAAEA,UAAU,CAAVA,SAAAA,GAAAA,IAAAA,GARb,KAAA;AASE,QAAA,eAAe,EAAEA,UAAU,CAT7B,eAAA;AAUE,QAAA,eAAe,EAAEA,UAAU,CAV7B,eAAA;AAWE,QAAA,OAAO,EAAEA,UAAU,CAXrB,YAAA;AAYE,QAAA,gBAAgB,EAAEA,UAAU,CAZ9B,qBAAA;AAaE,QAAA,eAAe,EAAEA,UAAU,CAb7B,oBAAA;AAcE,QAAA,gBAAgB,EAAEA,UAAU,CAd9B,qBAAA;AAeE,QAAA,KAAK,EAAEA,UAAU,CAfnB,UAAA;AAgBE,QAAA,MAAM,EAAEA,UAAU,CAhBpB,WAAA;AAiBE,QAAA,YAAY,EAAEA,UAAU,CAjB1B,iBAAA;AAkBE,QAAA,MAAM,EAAEA,UAAU,CAlBpB,WAAA;AAmBE,QAAA,UAAU,EAAEA,UAAU,CAnBxB,eAAA;AAoBE,QAAA,SAAS,EAAEA,UAAU,CAACrB;AApBxB,OAAA,EAsBGqB,UAAU,CAAVA,kBAAAA,IAAAA,aACC,gBAAA,aAAA,CAAA,aAAA,EAAA;AACE,QAAA,OAAO,EAAE,MAAM;AACbE,UAAAA,UAAU;AACX;AAHH,OAAA,EAAA,aAKE,gBAAA,aAAA,CAAA,iBAAA,EAAA;AAAW,QAAA,GAAG,EAAEW;AAAhB,OAAA,CALF,CAvBJ,EADF,QACE,CADF;AADF,KAAA;;AAuCA,WAAA,aACE,gBAAA,aAAA,CAAA,gBAAA,QAAA,EAAA,IAAA,EACG,CAACb,UAAU,CAAX,QAAA,GAAA,aACC,gBAAA,aAAA,CAAA,eAAA,EAAA;AACE,MAAA,SAAS,EAAEA,UAAU,CAAVA,SAAAA,GAAAA,IAAAA,GADb,KAAA;AAEE,MAAA,MAAM,EAAEA,UAAU,CAACnC;AAFrB,KAAA,EAIGmC,UAAU,CAAVA,SAAAA,GAAAA,aACC,gBAAA,aAAA,CAAA,eAAA,EAAA;AACE,MAAA,SAAS,EACPA,UAAU,CAAVA,SAAAA,IACAA,UAAU,CADVA,QAAAA,IAEAA,UAAU,CAFVA,SAAAA,GAAAA,IAAAA,GAFJ,KAAA;AAQE,MAAA,SAAS,EAAEA,UAAU,CAAVA,SAAAA,GAAAA,IAAAA,GARb,KAAA;AASE,MAAA,SAAS,EAAEA,UAAU,CAAVA,SAAAA,GAAAA,IAAAA,GATb,KAAA;AAUE,MAAA,eAAe,EAAEA,UAAU,CAV7B,eAAA;AAWE,MAAA,eAAe,EAAEA,UAAU,CAX7B,eAAA;AAYE,MAAA,OAAO,EAAEA,UAAU,CAZrB,cAAA;AAaE,MAAA,UAAU,EAAEA,UAAU,CAAC/B;AAbzB,KAAA,EAeG2C,WAhBJZ,EACC,CADDA,GAAAA,aAmBC,gBAAA,aAAA,CAAA,gBAAA,QAAA,EAAA,IAAA,EAAGY,WAxBR,EAwBK,CAvBJ,CADD,GAFL,EACE,CADF;AAxIG,GAActB,CAAd;AA6KPD,EAAAA,KAAK,CAALA,YAAAA,GAAAA,iBAAAA;oBAEA,K","sourcesContent":["import React, {\n  useReducer,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n} from 'react';\nimport PropTypes, { InferProps } from 'prop-types';\n\nimport {\n  reducer as modalReducer,\n  initialValues as modalInitialValues,\n} from './Modal.reducer';\n\nimport { Wrapper, Overlay, Panel, Close, CloseIcon } from './Modal.styled';\n\nimport CLOSE_ICON from '../assets/images/Close.svg';\n\ntype InferPropType<\n  PropTypes,\n  DefaultProps = {},\n  Props = InferProps<PropTypes>\n> = {\n  [Key in keyof Props]: Key extends keyof DefaultProps\n    ? Props[Key] | DefaultProps[Key]\n    : Props[Key];\n};\n\nconst modalPropTypes = {\n  children: PropTypes.node,\n  options: PropTypes.shape({\n    openingDuration: PropTypes.number,\n    closingDuration: PropTypes.number,\n    zIndex: PropTypes.number,\n    isOverlay: PropTypes.bool,\n    isOverlayClosing: PropTypes.bool,\n    overlayPadding: PropTypes.string,\n    overlayBackground: PropTypes.string,\n    isPanelCloseButton: PropTypes.bool,\n    isPanelRestrictedSize: PropTypes.bool,\n    panelRestrictedWidth: PropTypes.string,\n    panelRestrictedHeight: PropTypes.string,\n    panelWidth: PropTypes.string,\n    panelHeight: PropTypes.string,\n    panelBorderRadius: PropTypes.string,\n    panelBorder: PropTypes.string,\n    panelBackground: PropTypes.string,\n    panelBoxShadow: PropTypes.string,\n    panelPadding: PropTypes.string,\n  }),\n  onOpenStart: PropTypes.func,\n  onOpenEnd: PropTypes.func,\n  onCloseStart: PropTypes.func,\n  onCloseEnd: PropTypes.func,\n};\n\nconst modalDefaultProps = {\n  options: {\n    openingDuration: modalInitialValues.openingDuration,\n    closingDuration: modalInitialValues.closingDuration,\n    zIndex: modalInitialValues.zIndex,\n    isOverlay: modalInitialValues.isOverlay,\n    isOverlayClosing: modalInitialValues.isOverlayClosing,\n    overlayPadding: modalInitialValues.overlayPadding,\n    overlayBackground: modalInitialValues.overlayBackground,\n    isPanelCloseButton: modalInitialValues.isPanelCloseButton,\n    isPanelRestrictedSize: modalInitialValues.isPanelRestrictedSize,\n    panelRestrictedWidth: modalInitialValues.panelRestrictedWidth,\n    panelRestrictedHeight: modalInitialValues.panelRestrictedHeight,\n    panelWidth: modalInitialValues.panelWidth,\n    panelHeight: modalInitialValues.panelHeight,\n    panelBorderRadius: modalInitialValues.panelBorderRadius,\n    panelBorder: modalInitialValues.panelBorder,\n    panelBackground: modalInitialValues.panelBackground,\n    panelBoxShadow: modalInitialValues.panelBoxShadow,\n    panelPadding: modalInitialValues.panelPadding,\n  },\n  onOpenStart: () => {},\n  onOpenEnd: () => {},\n  onCloseStart: () => {},\n  onCloseEnd: () => {},\n};\n\ntype ModalPropsType = InferPropType<\n  typeof modalPropTypes,\n  typeof modalDefaultProps\n>;\n\ntype ForwardedRefType = {\n  openModal: () => void;\n  closeModal: () => void;\n};\n\nexport const Modal = forwardRef<ForwardedRefType, ModalPropsType>(\n  (\n    { children, options, onOpenStart, onOpenEnd, onCloseStart, onCloseEnd },\n    forwardedRef\n  ) => {\n    const panelRef = useRef<HTMLDivElement>(null);\n    const [modalState, modalDispatch] = useReducer(\n      modalReducer,\n      Object.assign({}, modalInitialValues, options)\n    );\n\n    const handleActionOnOpenStart = () =>\n      typeof onOpenStart === 'function' && onOpenStart();\n    const handleActionOnOpenEnd = () =>\n      typeof onOpenEnd === 'function' && onOpenEnd();\n    const handleActionOnCloseStart = () =>\n      typeof onCloseStart === 'function' && onCloseStart();\n    const handleActionOnCloseEnd = () =>\n      typeof onCloseEnd === 'function' && onCloseEnd();\n\n    const openModal = () => {\n      if (modalState.isClosed) modalDispatch({ type: 'OPEN_START' });\n    };\n\n    const closeModal = () => {\n      if (modalState.isOpened) modalDispatch({ type: 'CLOSE_START' });\n    };\n\n    const handleClickDocumentEventListener = (event: MouseEvent) => {\n      if (\n        !(\n          panelRef &&\n          panelRef.current &&\n          panelRef.current.contains(event.target as Element)\n        )\n      ) {\n        closeModal();\n      }\n    };\n\n    useEffect(() => {\n      let timeout: number;\n      if (modalState.isOpening) {\n        handleActionOnOpenStart();\n        timeout = setTimeout(() => {\n          modalDispatch({ type: 'OPEN_END' });\n        }, modalState.openingDuration);\n      }\n      return () => {\n        if (timeout) clearTimeout(timeout);\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [modalState.isOpening]);\n\n    useEffect(() => {\n      if (modalState.isOpened) handleActionOnOpenEnd();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [modalState.isOpened]);\n\n    useEffect(() => {\n      let timeout: number;\n      if (modalState.isClosing) {\n        handleActionOnCloseStart();\n        timeout = setTimeout(() => {\n          modalDispatch({ type: 'CLOSE_END' });\n        }, modalState.closingDuration);\n      }\n\n      return () => {\n        if (timeout) clearTimeout(timeout);\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [modalState.isClosing]);\n\n    useEffect(() => {\n      if (modalState.isClosed) handleActionOnCloseEnd();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [modalState.isClosed]);\n\n    useEffect(() => {\n      if (modalState.isOverlay && modalState.isOverlayClosing)\n        document.addEventListener('click', handleClickDocumentEventListener);\n      return () => {\n        if (modalState.isOverlay && modalState.isOverlayClosing)\n          document.removeEventListener(\n            'click',\n            handleClickDocumentEventListener\n          );\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [modalState.isOpening, modalState.isOpened]);\n\n    useImperativeHandle(forwardedRef, () => ({\n      openModal: () => openModal(),\n      closeModal: () => closeModal(),\n    }));\n\n    const renderPanel = () => {\n      return (\n        <Panel\n          ref={panelRef}\n          isVisible={\n            modalState.isOpening || modalState.isOpened || modalState.isClosing\n              ? true\n              : false\n          }\n          isOpening={modalState.isOpening ? true : false}\n          isClosing={modalState.isClosing ? true : false}\n          openingDuration={modalState.openingDuration}\n          closingDuration={modalState.closingDuration}\n          padding={modalState.panelPadding}\n          isRestrictedSize={modalState.isPanelRestrictedSize}\n          restrictedWidth={modalState.panelRestrictedWidth}\n          restrictedHeight={modalState.panelRestrictedHeight}\n          width={modalState.panelWidth}\n          height={modalState.panelHeight}\n          borderRadius={modalState.panelBorderRadius}\n          border={modalState.panelBorder}\n          background={modalState.panelBackground}\n          boxShadow={modalState.panelBoxShadow}\n        >\n          {modalState.isPanelCloseButton && (\n            <Close\n              onClick={() => {\n                closeModal();\n              }}\n            >\n              <CloseIcon src={CLOSE_ICON} />\n            </Close>\n          )}\n\n          {children}\n        </Panel>\n      );\n    };\n\n    return (\n      <>\n        {!modalState.isClosed ? (\n          <Wrapper\n            isOverlay={modalState.isOverlay ? true : false}\n            zIndex={modalState.zIndex}\n          >\n            {modalState.isOverlay ? (\n              <Overlay\n                isVisible={\n                  modalState.isOpening ||\n                  modalState.isOpened ||\n                  modalState.isClosing\n                    ? true\n                    : false\n                }\n                isOpening={modalState.isOpening ? true : false}\n                isClosing={modalState.isClosing ? true : false}\n                openingDuration={modalState.openingDuration}\n                closingDuration={modalState.closingDuration}\n                padding={modalState.overlayPadding}\n                background={modalState.overlayBackground}\n              >\n                {renderPanel()}\n              </Overlay>\n            ) : (\n              <>{renderPanel()}</>\n            )}\n          </Wrapper>\n        ) : (\n          ''\n        )}\n      </>\n    );\n  }\n);\n\nModal.defaultProps = modalDefaultProps;\n\nexport default Modal;\n"],"file":"Modal.js"}