{"version":3,"sources":["../../../src/components/Modal.tsx"],"names":["React","useReducer","useEffect","forwardRef","useImperativeHandle","useRef","PropTypes","reducer","modalReducer","initialValues","modalInitialValues","Wrapper","Overlay","Panel","Close","CloseIcon","CLOSE_ICON","modalPropTypes","children","node","options","shape","openingDuration","number","closingDuration","zIndex","isOverlay","bool","isOverlayClosing","overlayPadding","string","overlayBackground","isPanelCloseButton","isPanelRestrictedSize","panelRestrictedWidth","panelRestrictedHeight","panelWidth","panelHeight","panelBorderRadius","panelBorder","panelBackground","panelBoxShadow","panelPadding","onOpenStart","func","onOpenEnd","onCloseStart","onCloseEnd","modalDefaultProps","Modal","forwardedRef","panelRef","modalState","modalDispatch","Object","assign","handleActionOnOpenStart","handleActionOnOpenEnd","handleActionOnCloseStart","handleActionOnCloseEnd","openModal","isClosed","type","closeModal","isOpened","handleClickDocumentEventListener","event","current","contains","target","timeout","isOpening","setTimeout","clearTimeout","isClosing","document","addEventListener","removeEventListener","renderPanel","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useReducer,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n} from 'react';\nimport PropTypes, { InferProps } from 'prop-types';\n\nimport {\n  reducer as modalReducer,\n  initialValues as modalInitialValues,\n} from './Modal.reducer';\n\nimport { Wrapper, Overlay, Panel, Close, CloseIcon } from './Modal.styled';\n\nimport CLOSE_ICON from '../assets/images/Close.svg';\n\ntype InferPropType<\n  PropTypes,\n  DefaultProps = {},\n  Props = InferProps<PropTypes>\n> = {\n  [Key in keyof Props]: Key extends keyof DefaultProps\n    ? Props[Key] | DefaultProps[Key]\n    : Props[Key];\n};\n\nconst modalPropTypes = {\n  children: PropTypes.node,\n  options: PropTypes.shape({\n    openingDuration: PropTypes.number,\n    closingDuration: PropTypes.number,\n    zIndex: PropTypes.number,\n    isOverlay: PropTypes.bool,\n    isOverlayClosing: PropTypes.bool,\n    overlayPadding: PropTypes.string,\n    overlayBackground: PropTypes.string,\n    isPanelCloseButton: PropTypes.bool,\n    isPanelRestrictedSize: PropTypes.bool,\n    panelRestrictedWidth: PropTypes.string,\n    panelRestrictedHeight: PropTypes.string,\n    panelWidth: PropTypes.string,\n    panelHeight: PropTypes.string,\n    panelBorderRadius: PropTypes.string,\n    panelBorder: PropTypes.string,\n    panelBackground: PropTypes.string,\n    panelBoxShadow: PropTypes.string,\n    panelPadding: PropTypes.string,\n  }),\n  onOpenStart: PropTypes.func,\n  onOpenEnd: PropTypes.func,\n  onCloseStart: PropTypes.func,\n  onCloseEnd: PropTypes.func,\n};\n\nconst modalDefaultProps = {\n  options: {\n    openingDuration: modalInitialValues.openingDuration,\n    closingDuration: modalInitialValues.closingDuration,\n    zIndex: modalInitialValues.zIndex,\n    isOverlay: modalInitialValues.isOverlay,\n    isOverlayClosing: modalInitialValues.isOverlayClosing,\n    overlayPadding: modalInitialValues.overlayPadding,\n    overlayBackground: modalInitialValues.overlayBackground,\n    isPanelCloseButton: modalInitialValues.isPanelCloseButton,\n    isPanelRestrictedSize: modalInitialValues.isPanelRestrictedSize,\n    panelRestrictedWidth: modalInitialValues.panelRestrictedWidth,\n    panelRestrictedHeight: modalInitialValues.panelRestrictedHeight,\n    panelWidth: modalInitialValues.panelWidth,\n    panelHeight: modalInitialValues.panelHeight,\n    panelBorderRadius: modalInitialValues.panelBorderRadius,\n    panelBorder: modalInitialValues.panelBorder,\n    panelBackground: modalInitialValues.panelBackground,\n    panelBoxShadow: modalInitialValues.panelBoxShadow,\n    panelPadding: modalInitialValues.panelPadding,\n  },\n  onOpenStart: () => {},\n  onOpenEnd: () => {},\n  onCloseStart: () => {},\n  onCloseEnd: () => {},\n};\n\ntype ModalPropsType = InferPropType<\n  typeof modalPropTypes,\n  typeof modalDefaultProps\n>;\n\ntype ForwardedRefType = {\n  openModal: () => void;\n  closeModal: () => void;\n};\n\nexport const Modal = forwardRef<ForwardedRefType, ModalPropsType>(\n  (\n    { children, options, onOpenStart, onOpenEnd, onCloseStart, onCloseEnd },\n    forwardedRef\n  ) => {\n    const panelRef = useRef<HTMLDivElement>(null);\n    const [modalState, modalDispatch] = useReducer(\n      modalReducer,\n      Object.assign({}, modalInitialValues, options)\n    );\n\n    const handleActionOnOpenStart = () =>\n      typeof onOpenStart === 'function' && onOpenStart();\n    const handleActionOnOpenEnd = () =>\n      typeof onOpenEnd === 'function' && onOpenEnd();\n    const handleActionOnCloseStart = () =>\n      typeof onCloseStart === 'function' && onCloseStart();\n    const handleActionOnCloseEnd = () =>\n      typeof onCloseEnd === 'function' && onCloseEnd();\n\n    const openModal = () => {\n      if (modalState.isClosed) modalDispatch({ type: 'OPEN_START' });\n    };\n\n    const closeModal = () => {\n      if (modalState.isOpened) modalDispatch({ type: 'CLOSE_START' });\n    };\n\n    const handleClickDocumentEventListener = (event: MouseEvent) => {\n      if (\n        !(\n          panelRef &&\n          panelRef.current &&\n          panelRef.current.contains(event.target as Element)\n        )\n      ) {\n        closeModal();\n      }\n    };\n\n    useEffect(() => {\n      let timeout: number;\n      if (modalState.isOpening) {\n        handleActionOnOpenStart();\n        timeout = setTimeout(() => {\n          modalDispatch({ type: 'OPEN_END' });\n        }, modalState.openingDuration);\n      }\n      return () => {\n        if (timeout) clearTimeout(timeout);\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [modalState.isOpening]);\n\n    useEffect(() => {\n      if (modalState.isOpened) handleActionOnOpenEnd();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [modalState.isOpened]);\n\n    useEffect(() => {\n      let timeout: number;\n      if (modalState.isClosing) {\n        handleActionOnCloseStart();\n        timeout = setTimeout(() => {\n          modalDispatch({ type: 'CLOSE_END' });\n        }, modalState.closingDuration);\n      }\n\n      return () => {\n        if (timeout) clearTimeout(timeout);\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [modalState.isClosing]);\n\n    useEffect(() => {\n      if (modalState.isClosed) handleActionOnCloseEnd();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [modalState.isClosed]);\n\n    useEffect(() => {\n      if (modalState.isOverlay && modalState.isOverlayClosing)\n        document.addEventListener('click', handleClickDocumentEventListener);\n      return () => {\n        if (modalState.isOverlay && modalState.isOverlayClosing)\n          document.removeEventListener(\n            'click',\n            handleClickDocumentEventListener\n          );\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [modalState.isOpening, modalState.isOpened]);\n\n    useImperativeHandle(forwardedRef, () => ({\n      openModal: () => openModal(),\n      closeModal: () => closeModal(),\n    }));\n\n    const renderPanel = () => {\n      return (\n        <Panel\n          ref={panelRef}\n          isVisible={\n            modalState.isOpening || modalState.isOpened || modalState.isClosing\n              ? true\n              : false\n          }\n          isOpening={modalState.isOpening ? true : false}\n          isClosing={modalState.isClosing ? true : false}\n          openingDuration={modalState.openingDuration}\n          closingDuration={modalState.closingDuration}\n          padding={modalState.panelPadding}\n          isRestrictedSize={modalState.isPanelRestrictedSize}\n          restrictedWidth={modalState.panelRestrictedWidth}\n          restrictedHeight={modalState.panelRestrictedHeight}\n          width={modalState.panelWidth}\n          height={modalState.panelHeight}\n          borderRadius={modalState.panelBorderRadius}\n          border={modalState.panelBorder}\n          background={modalState.panelBackground}\n          boxShadow={modalState.panelBoxShadow}\n        >\n          {modalState.isPanelCloseButton && (\n            <Close\n              onClick={() => {\n                closeModal();\n              }}\n            >\n              <CloseIcon src={CLOSE_ICON} />\n            </Close>\n          )}\n\n          {children}\n        </Panel>\n      );\n    };\n\n    return (\n      <>\n        {!modalState.isClosed ? (\n          <Wrapper\n            isOverlay={modalState.isOverlay ? true : false}\n            zIndex={modalState.zIndex}\n          >\n            {modalState.isOverlay ? (\n              <Overlay\n                isVisible={\n                  modalState.isOpening ||\n                  modalState.isOpened ||\n                  modalState.isClosing\n                    ? true\n                    : false\n                }\n                isOpening={modalState.isOpening ? true : false}\n                isClosing={modalState.isClosing ? true : false}\n                openingDuration={modalState.openingDuration}\n                closingDuration={modalState.closingDuration}\n                padding={modalState.overlayPadding}\n                background={modalState.overlayBackground}\n              >\n                {renderPanel()}\n              </Overlay>\n            ) : (\n              <>{renderPanel()}</>\n            )}\n          </Wrapper>\n        ) : (\n          ''\n        )}\n      </>\n    );\n  }\n);\n\nModal.defaultProps = modalDefaultProps;\n\nexport default Modal;\n"],"file":"Modal.js"}