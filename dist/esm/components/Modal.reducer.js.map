{"version":3,"sources":["../../../src/components/Modal.reducer.ts"],"names":["Type","initialValues","openingDuration","closingDuration","zIndex","isOverlay","isOverlayClosing","overlayPadding","overlayBackground","isPanelCloseButton","isPanelRestrictedSize","panelRestrictedWidth","panelRestrictedHeight","panelWidth","panelHeight","panelBorderRadius","panelBorder","panelBackground","panelBoxShadow","panelPadding","isOpening","isOpened","isClosing","isClosed","reducer","state","action","type","OPEN_START","OPEN_END","CLOSE_START","CLOSE_END"],"mappings":";;;;;;IAyBKA,I;;WAAAA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;GAAAA,I,KAAAA,I;;AAYL,MAAMC,aAAa,GAAG;AACpBC,EAAAA,eAAe,EAAE,GADG;AAEpBC,EAAAA,eAAe,EAAE,GAFG;AAGpBC,EAAAA,MAAM,EAAE,IAHY;AAIpBC,EAAAA,SAAS,EAAE,KAJS;AAKpBC,EAAAA,gBAAgB,EAAE,IALE;AAMpBC,EAAAA,cAAc,EAAE,MANI;AAOpBC,EAAAA,iBAAiB,EAAE,iBAPC;AAQpBC,EAAAA,kBAAkB,EAAE,IARA;AASpBC,EAAAA,qBAAqB,EAAE,KATH;AAUpBC,EAAAA,oBAAoB,EAAE,MAVF;AAWpBC,EAAAA,qBAAqB,EAAE,MAXH;AAYpBC,EAAAA,UAAU,EAAE,SAZQ;AAapBC,EAAAA,WAAW,EAAE,SAbO;AAcpBC,EAAAA,iBAAiB,EAAE,MAdC;AAepBC,EAAAA,WAAW,EAAE,MAfO;AAgBpBC,EAAAA,eAAe,EAAE,qBAhBG;AAiBpBC,EAAAA,cAAc,EAAE,6BAjBI;AAkBpBC,EAAAA,YAAY,EAAE,MAlBM;AAmBpBC,EAAAA,SAAS,EAAE,KAnBS;AAoBpBC,EAAAA,QAAQ,EAAE,KApBU;AAqBpBC,EAAAA,SAAS,EAAE,KArBS;AAsBpBC,EAAAA,QAAQ,EAAE;AAtBU,CAAtB;;AAyBA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAeC,MAAf,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK3B,IAAI,CAAC4B,UAAV;AACE,6CACKH,KADL;AAEEL,QAAAA,SAAS,EAAE,IAFb;AAGEC,QAAAA,QAAQ,EAAE,KAHZ;AAIEC,QAAAA,SAAS,EAAE,KAJb;AAKEC,QAAAA,QAAQ,EAAE;AALZ;;AAOF,SAAKvB,IAAI,CAAC6B,QAAV;AACE,6CACKJ,KADL;AAEEL,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,QAAQ,EAAE,IAHZ;AAIEC,QAAAA,SAAS,EAAE,KAJb;AAKEC,QAAAA,QAAQ,EAAE;AALZ;;AAOF,SAAKvB,IAAI,CAAC8B,WAAV;AACE,6CACKL,KADL;AAEEL,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,QAAQ,EAAE,KAHZ;AAIEC,QAAAA,SAAS,EAAE,IAJb;AAKEC,QAAAA,QAAQ,EAAE;AALZ;;AAOF,SAAKvB,IAAI,CAAC+B,SAAV;AACE,6CACKN,KADL;AAEEL,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,QAAQ,EAAE,KAHZ;AAIEC,QAAAA,SAAS,EAAE,KAJb;AAKEC,QAAAA,QAAQ,EAAE;AALZ;;AAOF;AACE,aAAOE,KAAP;AAlCJ;AAoCD,CArCD;;AAuCA,eAAeD,OAAf;AACA,SAASA,OAAT,EAAkBvB,aAAlB","sourcesContent":["type State = {\n  openingDuration: number;\n  closingDuration: number;\n  zIndex: number;\n  isOverlay: boolean;\n  isOverlayClosing: boolean;\n  overlayPadding: string;\n  overlayBackground: string;\n  isPanelCloseButton: boolean;\n  isPanelRestrictedSize: boolean;\n  panelRestrictedWidth: string;\n  panelRestrictedHeight: string;\n  panelWidth: string;\n  panelHeight: string;\n  panelBorderRadius: string;\n  panelBorder: string;\n  panelBackground: string;\n  panelBoxShadow: string;\n  panelPadding: string;\n  isOpening: boolean;\n  isOpened: boolean;\n  isClosing: boolean;\n  isClosed: boolean;\n};\n\nenum Type {\n  OPEN_START = 'OPEN_START',\n  OPEN_END = 'OPEN_END',\n  CLOSE_START = 'CLOSE_START',\n  CLOSE_END = 'CLOSE_END',\n}\nexport type TypeKey = keyof typeof Type;\n\ntype Action = {\n  type: TypeKey;\n};\n\nconst initialValues = {\n  openingDuration: 200,\n  closingDuration: 200,\n  zIndex: 9999,\n  isOverlay: false,\n  isOverlayClosing: true,\n  overlayPadding: '20px',\n  overlayBackground: 'rgba(0,0,0,.25)',\n  isPanelCloseButton: true,\n  isPanelRestrictedSize: false,\n  panelRestrictedWidth: '100%',\n  panelRestrictedHeight: '100%',\n  panelWidth: 'initial',\n  panelHeight: 'initial',\n  panelBorderRadius: '25px',\n  panelBorder: 'none',\n  panelBackground: 'rgba(255,255,255,1)',\n  panelBoxShadow: '0 3px 6px 0 rgba(0,0,0,.15)',\n  panelPadding: '25px',\n  isOpening: false,\n  isOpened: false,\n  isClosing: false,\n  isClosed: true,\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case Type.OPEN_START:\n      return {\n        ...state,\n        isOpening: true,\n        isOpened: false,\n        isClosing: false,\n        isClosed: false,\n      };\n    case Type.OPEN_END:\n      return {\n        ...state,\n        isOpening: false,\n        isOpened: true,\n        isClosing: false,\n        isClosed: false,\n      };\n    case Type.CLOSE_START:\n      return {\n        ...state,\n        isOpening: false,\n        isOpened: false,\n        isClosing: true,\n        isClosed: false,\n      };\n    case Type.CLOSE_END:\n      return {\n        ...state,\n        isOpening: false,\n        isOpened: false,\n        isClosing: false,\n        isClosed: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\nexport { reducer, initialValues };\n"],"file":"Modal.reducer.js"}